name: 'Run ScalaTest'
on:
  push:
    branches:
      - '**'
    tags-ignore:
      - dev-prerelease

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  Compile:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout VerCors
        uses: actions/checkout@v2
      - name: Install Java
        uses: actions/setup-java@v1
        with:
          java-version: 17
      - name: Cache dependencies and compilation
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/coursier
            ~/.mill/ammonite
            out
            !**/unixTar.dest
            !**/unixTar.json
            !**/macosTar.dest
            !**/macosTar.json
            !**/winZip.dest
            !**/winZip.json
            !**/assembly.dest
            !**/assembly.json
            !**/upstreamAssembly.dest
            !**/upstreamAssembly.json
          key: vercors-ci-ubuntu
      - name: Compile
        run: ./mill --no-default-predef -j 0 allTests.unixTar + allTests.winZip + allTests.macosTar
      - name: Upload (Linux)
        uses: actions/upload-artifact@v3
        with:
          name: allTests-unix
          path: 'out/allTests/unixTar.dest/*.tar.xz'
      - name: Upload (MacOS)
        uses: actions/upload-artifact@v3
        with:
          name: allTests-mac
          path: 'out/allTests/macosTar.dest/*.tar.xz'
      - name: Upload (Windows)
        uses: actions/upload-artifact@v3
        with:
          name: allTests-win
          path: 'out/allTests/winZip.dest/*.zip'


  ScalaTestWindowsBasic:
    needs: "Compile"
    runs-on: windows-latest
    steps:
      - name: Install Java
        uses: actions/setup-java@v1
        with:
          java-version: 17
      - name: Cache LLVM and Clang
        id: cache-llvm
        uses: actions/cache@v2
        with:
          path: ${{ runner.temp }}/llvm
          key: llvm-10.0
      - name: Install LLVM and Clang
        uses: KyleMayes/install-llvm-action@v1
        with:
          version: "10.0"
          directory: ${{ runner.temp }}/llvm
          cached: ${{ steps.cache-llvm.outputs.cache-hit }}
      - name: Download VerCors
        uses: actions/download-artifact@v3
        with:
          name: allTests-win
          path: '.'
      - name: Unpack VerCors
        run: tar -xf *.zip
      - name: Run scalatest
        run: allTests.bat vct.test.integration.examples.BasicExamplesSpec
      - name: Upload test reports
        if: success() || failure()
        uses: actions/upload-artifact@v3
        with:
          name: test-report-windows-latest
          path: '**/target/test-reports/TEST-*.xml'

  ScalaTestMacOsBasic:
    needs: "Compile"
    runs-on: macos-latest
    steps:
      - name: Install Java
        uses: actions/setup-java@v1
        with:
          java-version: 17
      - name: Install clang
        run: brew install llvm
      - name: Download VerCors
        uses: actions/download-artifact@v3
        with:
          name: allTests-macos
          path: '.'
      - name: Unpack VerCors
        run: tar -xf *.tar.xz
      - name: Run scalatest
        run: ./allTests vct.test.integration.examples.BasicExamplesSpec
      - name: Run scalatest
        run: ./mill allTests.test vct.test.integration.examples.BasicExamplesSpec
      - name: Upload test reports
        if: success() || failure()
        uses: actions/upload-artifact@v3
        with:
          name: test-report-macos-latest
          path: '**/target/test-reports/TEST-*.xml'

  ScalaTest:
    needs: "Compile"
    strategy:
      fail-fast: false
      matrix:
        batch: ["-n MATRIX[0]", "-n MATRIX[1]", "-n MATRIX[2]", "-n MATRIX[3]", "-n MATRIX[4]", "-n MATRIX[5]", "-n MATRIX[6]", "-n MATRIX[7]", "-l MATRIX"]

    runs-on: ubuntu-latest
    steps:
      - name: Install Java
        uses: actions/setup-java@v1
        with:
          java-version: 17
      - name: Download VerCors
        uses: actions/download-artifact@v3
        with:
          name: allTests-unix
          path: '.'
      - name: Unpack VerCors
        run: tar -xf *.tar.xz
      - name: Run scalatest
        run: ./allTests -w vct ${{matrix.batch}}

      - name: Upload test reports
        if: success() || failure()
        uses: actions/upload-artifact@v3
        with:
          name: test-report-ubuntu-latest-${{ matrix.batch }}
          path: '**/target/test-reports/TEST-*.xml'

  GenerateTestReport:
    runs-on: ubuntu-latest
    if: ${{ success() || failure() }}
    needs: [ScalaTest, ScalaTestWindowsBasic, ScalaTestMacOsBasic]

    steps:
    - name: Checkout VerCors
      uses: actions/checkout@v2

    - {name: Download Test Report ubuntu-0, uses: actions/download-artifact@v3, with: {name: "test-report-ubuntu-latest--n MATRIX[0]", path: reports/ubuntu-0 }}
    - {name: Download Test Report ubuntu-1, uses: actions/download-artifact@v3, with: {name: "test-report-ubuntu-latest--n MATRIX[1]", path: reports/ubuntu-1 }}
    - {name: Download Test Report ubuntu-2, uses: actions/download-artifact@v3, with: {name: "test-report-ubuntu-latest--n MATRIX[2]", path: reports/ubuntu-2 }}
    - {name: Download Test Report ubuntu-3, uses: actions/download-artifact@v3, with: {name: "test-report-ubuntu-latest--n MATRIX[3]", path: reports/ubuntu-3 }}
    - {name: Download Test Report ubuntu-4, uses: actions/download-artifact@v3, with: {name: "test-report-ubuntu-latest--n MATRIX[4]", path: reports/ubuntu-4 }}
    - {name: Download Test Report ubuntu-5, uses: actions/download-artifact@v3, with: {name: "test-report-ubuntu-latest--n MATRIX[5]", path: reports/ubuntu-5 }}
    - {name: Download Test Report ubuntu-6, uses: actions/download-artifact@v3, with: {name: "test-report-ubuntu-latest--n MATRIX[6]", path: reports/ubuntu-6 }}
    - {name: Download Test Report ubuntu-7, uses: actions/download-artifact@v3, with: {name: "test-report-ubuntu-latest--n MATRIX[7]", path: reports/ubuntu-7 }}
    - {name: Download Test Report ubuntu-x, uses: actions/download-artifact@v3, with: {name: "test-report-ubuntu-latest--l MATRIX", path: reports/ubuntu-x }}

    - { name: Download Test Report windows, uses: actions/download-artifact@v3, with: { name: "test-report-windows-latest", path: reports/windows } }
    - { name: Download Test Report macos, uses: actions/download-artifact@v3, with: { name: "test-report-macos-latest", path: reports/macos } }

    - name: Test Report
      uses: dorny/test-reporter@v1
      if: success() || failure()
      with:
        name: TestReport           # Name of the check run which will be created
        path: 'reports/**/TEST-*.xml'    # Path to test results
        reporter: java-junit
